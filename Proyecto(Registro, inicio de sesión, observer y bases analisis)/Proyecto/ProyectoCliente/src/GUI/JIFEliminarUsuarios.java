/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package GUI;


import Domain.Administrador;
import Domain.ClienteSingleton;
import Domain.Examinador;
import Domain.Usuario;
import Utility.GestionXML;
import Utility.Observer;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.jdom.Element;
import org.jdom.JDOMException;

/**
 *
 * @author Estephanie
 */
public class JIFEliminarUsuarios extends javax.swing.JInternalFrame implements Observer{

    /**
     * Creates new form JIFEliminarUsuarios
     */
    private ArrayList<Usuario> usuarios;
    private ClienteSingleton clienteSingleton;
    private Usuario remove;
    private int recibos;
    public JIFEliminarUsuarios() {
            initComponents();
            this.usuarios = new ArrayList<>();
            solicitarUsuarios();
            this.remove=null;
            this.recibos=0;
            this.clienteSingleton=ClienteSingleton.getInstance();
            GestionXML gestionXML=new GestionXML();
            
            this.clienteSingleton.enviarDatos(gestionXML.xmlToString(gestionXML.agregarAccionSimple("AllExaminadores", "")));
            this.clienteSingleton.enviarDatos(gestionXML.xmlToString(gestionXML.agregarAccionSimple("AllAdministradores", "")));
    }

   
    private void solicitarUsuarios() {
        //se obtienen tanto administradores como examinadores para el combobox
        
        for (int i = 0; i < this.usuarios.size(); i++) {
            if (this.usuarios.get(i).isActivo()) {//si el usuario está activo
                this.jcbUsuarios.addItem(this.usuarios.get(i).getUser());//se ingresa al combobox
            }
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jcbUsuarios = new javax.swing.JComboBox<>();
        jbtnEliminar = new javax.swing.JButton();
        jbtnVolver = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setTitle("Eliminar");

        jbtnEliminar.setText("Eliminar");
        jbtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEliminarActionPerformed(evt);
            }
        });

        jbtnVolver.setText("Volver");
        jbtnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnVolverActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccione el usuario a eliminar:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbtnVolver)
                .addGap(15, 15, 15))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(jbtnEliminar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jcbUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel1)))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jcbUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnEliminar)
                .addGap(7, 7, 7)
                .addComponent(jbtnVolver)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEliminarActionPerformed
        GestionXML gestionXML=new GestionXML();
        try {
            int pos = jcbUsuarios.getSelectedIndex();//posicion del usuario seleccionado
            this.usuarios.get(pos).setActivo(false);//se cambia el activo a false
            if (this.usuarios.get(pos).getTipoUsuario().equals("administrador")) {//si es administrador cambia el xml de admins
                this.clienteSingleton.enviarDatos(gestionXML.xmlToString(gestionXML.administradorAXML("eliminarAdministrador", (Administrador) this.usuarios.get(pos))));
                this.remove=this.usuarios.get(pos);
            } else {
                //busca en el xml de examinadores
                
                 this.clienteSingleton.enviarDatos(gestionXML.xmlToString(gestionXML.examinadorAXML("eliminarExaminador",  (Examinador) this.usuarios.get(pos) )));
                 this.remove=this.usuarios.get(pos);
            }
        } catch (IOException ex) {
            Logger.getLogger(JIFEliminarUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jbtnEliminarActionPerformed

    private void jbtnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnVolverActionPerformed
        this.clienteSingleton.removeObserver(this);
        this.dispose();
    }//GEN-LAST:event_jbtnVolverActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbtnEliminar;
    private javax.swing.JButton jbtnVolver;
    private javax.swing.JComboBox<String> jcbUsuarios;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(String dato) {
        
        try {
            GestionXML gestionXML = new GestionXML();
            Element eProtocolo = gestionXML.stringToXML(dato);
            String accion = eProtocolo.getAttributeValue("accion");
            
            
            if (accion.equals("Examinadores")) {
                
                this.usuarios.addAll(gestionXML.xmlAExaminadores(eProtocolo));
                this.recibos++;
                for (int i = 0; i < usuarios.size(); i++) {
                    System.out.println(usuarios.get(i));
                    
                }
                System.out.println(recibos);
                if (this.recibos==2) {
                     solicitarUsuarios();
                }
               
            }
             if (accion.equals("Administradores")) {
                 
                this.usuarios.addAll(gestionXML.xmlAAdministradores(eProtocolo));
                 this.recibos++;
                
                if (this.recibos==2) {
                     solicitarUsuarios();
                }
            }
             if(accion.equals("eliminado")){
                  JOptionPane.showMessageDialog(this, "Se eliminó correctamente");
                  this.usuarios.remove(this.remove);
                  this.jcbUsuarios.removeAllItems();
                  solicitarUsuarios();
             }
             if (accion.equals("falloEliminacion")) {
                JOptionPane.showMessageDialog(this, "No se pudo eliminar");
            }
        } catch (JDOMException ex) {
            Logger.getLogger(JIFEliminarUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(JIFEliminarUsuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
